module network::IPv4

struct IPv4Header {
    u8 versionAndLength ?((this & 0b1111_0000) >> 4 == 4B)
    int headerLength = (versionAndLength & 0b1111).as[int] * 4
    u8 _
    u16 totalPacketLength 
    int dataSize = totalPacketLength.as[int] - headerLength
    u16 identification
    u16 fragmentFlagsAndOffset ?(this >> 15 == 0B)
    u8 ttl
    u8 protocol
    u16 checksum
    u32 srcAddress
    u32 dstAddress
    u8[] options [headerLength - (5 * 4)]
}