test D1 [[
    struct Person{
    	int offset = 5
		u8[] bootCode[0x1fd - offset]
	}
]]

test D2 [[
    struct Person{
    	Address address
		u8[] bootCode[0x1fd - address.number]
	}
	
	struct Address{
		int number = 5
	}
]]

test D3 [[
    struct Person{
    	u8[] bootCode[0x1fd - bootCode.offset]
	}
]]

test D4 [[
    struct Person{
    	int foo = 5
    	u8[] bootCode[0x1fd - foo.offset]
	}
]] expect { "Only token types have offsets" }

test D5 [[
    struct Person{
    	struct{
    		int number = 5
    	} address
	}
]]

test D6 [[
    struct Person{
    	struct{
    		int number = 5
    	} address
    	int exposed = address.number
	}
]]

test D7 [[
    struct Person{
    	u8[] grades
    	int firstGrade = grades[0]
	}
]]

test D8[[
choice FileCluster2(u16 nextCluster, u16 myCluster, u32 clusterSize, int clusterStart){
  struct{
  	u16 nextCluster ? (!= 0xFFF8)
  }
  struct{
    u16 nextCluster ? (== 0xFFF8)
  }
}
]]