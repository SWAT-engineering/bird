test D1 [[
module m
    
struct A{
	u16 nextCluster while (it == 0)
}	
]] expect { "while side condition can only guard list types" }

test D2 [[
module m
    
struct A{
	u16[] nextCluster while (it == 0)
}	
]]

test D3 [[
module m
    
struct A(u8 y){
	int x = (y == 5)?"x":0
}	
]] expect { "The two branches of the ternary operation must have the same type" }

test D4 [[
module m
    
struct A(u8 y){
	int x = 0?"x":0
}	
]] expect { "Condition must be boolean" }

test D5 [[
module m
    
struct A(u8 y){
	int x = (y == 5)?y:0
}	
]]

test D6 [[
module m
    
struct A(){
	u8 x
	u8 y = x >> 1
}	
]]

test D7 [[
module m
    
struct A(){
	u8 x
	u8 y = x >> 1
}	
]]

test D8 [[
module m
    
struct A(){
	u8[] x
	int y = 3 >> 1
}	
]]

test D9 [[
module m
    
struct A(){
	u8[] x
	u8[] y
	int z = x & y
}	
]]

test D10 [[
module m
    
struct A(){
	u8 x
	u16 y
	u16 z = x & y
}	
]]

